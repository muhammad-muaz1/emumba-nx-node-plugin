import { Request, Response } from 'express';
<% if (userAuth === 'token-based') { %>
import { getUserService, registerUserService, loginUserService, generateToken } from './user.service';
<% } else if (userAuth === 'session-based') { %>
import { getUserService, registerUserService, loginUserService } from './user.service';
<% } else { %>
import { getUserService, registerUserService } from './user.service';
<% } %>

export const getUser = async (req: Request, res: Response) => {
  try {
    const users = await getUserService();
    res.json(users);
  } catch (error) {
    res.status(500).send(error);
  }
};

export const register = async (req: Request, res: Response) => {
  try {
    const { name, email, password } = req.body;
    await registerUserService(name, email, password);
    res.status(201).send('User registered successfully');
  } catch (error) {
    res.status(500).send(error);
  }
};

<% if (userAuth !== 'none') { %>

export const login = async (req: Request, res: Response) => {
  try {
    const { email, password } = req.body;
    const user = await loginUserService(email, password);

    <% if (userAuth === 'token-based') { %>
    const token = generateToken(user);
    res.send({ token });
    <% } else { %>
    req.session.user = {
      _id: user._id.toString(),
      name: user.name,
      email: user.email,
    };
    res.send('Logged in successfully');
    <% } %>
  } catch (error) {
    res.status(500).send(error);
  }
};

<% } %>
