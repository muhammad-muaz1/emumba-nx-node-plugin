import { Request, Response, NextFunction } from 'express';
import User from '../models/user.model';
<% if (userAuth === 'token-based') { %>
import jwt from 'jsonwebtoken';
<% } %>

export const authenticate = async (req: Request, res: Response, next: NextFunction) => {
  <% if (userAuth === 'token-based') { %>
  const token = req.header('Authorization')?.replace('Bearer ', '');
  if (!token) {
    return res.status(401).send('Access denied. No token provided.');
  }

  try {
    const decoded = jwt.verify(token, process.env.JWT_SECRET as string) as any;
    const user = await User.findById(decoded._id);
    if (!user) {
      return res.status(401).send('Access denied. User not found.');
    }
    next();
  } catch (ex) {
    res.status(400).send('Invalid token.');
  }
  <% } else { %>
  if (req.session.user) {
    next();
  } else {
    res.status(401).send('Unauthorized: No session available');
  }
  <% } %>
};
